<?php

// Import all the Controllers we will need for our routes
use App\Http\Controllers\ProfileController;
use App\Http\Controllers\DashboardController; // General dashboard redirector
use App\Http\Controllers\Admin\UserController as AdminUserController;
use App\Http\Controllers\Admin\DashboardController as AdminDashboardController;
use App\Http\Controllers\Teacher\CourseController as TeacherCourseController;
use App\Http\Controllers\Teacher\DashboardController as TeacherDashboardController;
use App\Http\Controllers\Student\CourseController as StudentCourseController;
use App\Http\Controllers\Student\DashboardController as StudentDashboardController; // <-- ADD THIS
use App\Http\Controllers\Pengelola\DashboardController as PengelolaDashboardController;
use App\Http\Controllers\Pengelola\CourseController as PengelolaCourseController;
use App\Http\Controllers\Admin\DivisionController as AdminDivisionController; // <-- ADD THIS
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Teacher\CourseMaterialController; 
use App\Http\Controllers\Teacher\MeetingController;
use App\Http\Controllers\Admin\SkillController as AdminSkillController; // <-- ADD THIS
use App\Http\Controllers\Pengelola\LearningPathController;
use App\Http\Controllers\Student\LearningPathController as StudentLearningPathController;
use App\Http\Controllers\Teacher\QuizController as TeacherQuizController;
use App\Http\Controllers\Teacher\QuestionController as TeacherQuestionController;
use App\Http\Controllers\Teacher\OptionController as TeacherOptionController;
use App\Http\Controllers\Student\QuizAttemptController;
use App\Http\Controllers\TrixController;
use App\Http\Controllers\Forum\ForumController;
use App\Http\Controllers\Forum\PostController;


// Public Route (Homepage / Welcome)
Route::get('/', function () {
    // If user is logged in, redirect them to their dashboard, otherwise show welcome/login
    if (auth()->check()) {
        return redirect()->route('dashboard');
    }
    // You might want to redirect directly to login or show a landing page
    // return view('welcome'); // Default Laravel welcome page
    return redirect()->route('login'); // Redirect guests to login page
})->name('welcome'); // Give the homepage a name

// --- Authenticated User Routes (Common to all logged-in roles) ---
// The 'auth' middleware ensures the user is logged in.
// The 'verified' middleware ensures the user has verified their email (if enabled).
Route::middleware(['auth', 'verified'])->group(function () {

    // General dashboard router (redirects based on role)
    // This overrides the default Breeze '/dashboard' route
    Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');

    // Profile Management Routes (Generated by Breeze, slightly adjusted)
    // Accessible by Admin, Teacher, and Student
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy'); 
    Route::get('/notifications', [App\Http\Controllers\NotificationController::class, 'index'])->name('notifications.index');
    Route::post('/notifications/mark-all-as-read', [App\Http\Controllers\NotificationController::class, 'markAllAsRead'])->name('notifications.markAllAsRead');
    Route::get('/notifications/{id}/mark-as-read', [App\Http\Controllers\NotificationController::class, 'markAsRead'])->name('notifications.markAsRead');
    Route::get('/courses/{course}/forum', [ForumController::class, 'index'])->name('forum.index');
    Route::get('/courses/{course}/forum/create', [ForumController::class, 'create'])->name('forum.create');
    Route::post('/courses/{course}/forum', [ForumController::class, 'store'])->name('forum.store');
    Route::get('/courses/{course}/forum/{thread}', [ForumController::class, 'show'])->name('forum.show');
    Route::post('/forum/{thread}/posts', [PostController::class, 'store'])->name('posts.store');
});

/*
|--------------------------------------------------------------------------
| Chief Routes
|--------------------------------------------------------------------------
*/
Route::middleware(['auth', 'role:Chief'])->name('chief.')->prefix('chief')->group(function () {
    Route::get('/dashboard', [\App\Http\Controllers\Chief\DashboardController::class, 'index'])->name('dashboard');
    // --- NEW COMPREHENSIVE REPORT ROUTES ---
    Route::get('/reports/dashboard/excel', [\App\Http\Controllers\Chief\DashboardController::class, 'exportDashboardExcel'])->name('reports.dashboard.excel');
    Route::get('/reports/dashboard/pdf', [\App\Http\Controllers\Chief\DashboardController::class, 'exportDashboardPdf'])->name('reports.dashboard.pdf');
    // --- END NEW COMPREHENSIVE REPORT ROUTES ---

});

// --- Admin Routes ---
// Protected by 'auth', 'verified', and the 'role:Admin' middleware.
// URLs will start with /admin/ (e.g., /admin/dashboard)
// Route names will start with admin. (e.g., admin.dashboard)
Route::middleware(['auth', 'verified', 'role:Admin'])->prefix('admin')->name('admin.')->group(function () {
    Route::get('/dashboard', [AdminDashboardController::class, 'index'])->name('dashboard');
    // Resource route for User Management CRUD (index, create, store, show, edit, update, destroy)
    Route::resource('users', AdminUserController::class);
    Route::resource('divisions', AdminDivisionController::class);
    Route::resource('skills', AdminSkillController::class); 
    Route::put('/users/{id}/activate', [AdminUserController::class, 'activate'])->name('users.activate');
});

// --- Pengelola Routes ---
// Protected by 'auth', 'verified', and the 'role:Pengelola' middleware.
Route::middleware(['auth', 'verified', 'role:Pengelola'])->prefix('pengelola')->name('pengelola.')->group(function () {
    Route::get('/dashboard', [PengelolaDashboardController::class, 'index'])->name('dashboard');
    Route::get('/teacher-engagement', [PengelolaDashboardController::class, 'teacherEngagement'])->name('teacher.engagement');

    // Course Management for Pengelola
    Route::resource('courses', PengelolaCourseController::class);
    Route::get('/courses/{course}/progress', [PengelolaCourseController::class, 'progress'])->name('courses.progress');
    Route::get('/courses/{course}/progress/export', [PengelolaCourseController::class, 'exportProgress'])->name('courses.progress.export');

    // Routes for Assigning Teachers to a Course (managed by Pengelola)
    Route::get('/courses/{course}/assign-teachers', [PengelolaCourseController::class, 'assignTeachersForm'])
         ->name('courses.assign_teachers.form');
    Route::put('/courses/{course}/assign-teachers', [PengelolaCourseController::class, 'syncTeachers'])
         ->name('courses.assign_teachers.sync');
    
    Route::resource('learning-paths', LearningPathController::class);
    Route::patch('/courses/{course}/update-status', [PengelolaCourseController::class, 'updateStatus'])->name('courses.update_status');
});

// --- Teacher Routes ---

Route::middleware(['auth', 'verified', 'role:Teacher'])->prefix('teacher')->name('teacher.')->group(function () {
    Route::get('/dashboard', [TeacherDashboardController::class, 'index'])->name('dashboard');
    Route::resource('courses/{course}/quizzes', TeacherQuizController::class);
    Route::resource('courses', TeacherCourseController::class);
    Route::prefix('/courses/{course}/materials')
    ->name('courses.materials.') // Is this exactly 'courses.materials.'?
    ->controller(CourseMaterialController::class) // Is CourseMaterialController alias correct?
    ->group(function () {
        // Is this exactly name('create')?
        Route::get('/create', 'create')->name('create');
        Route::post('/', 'store')->name('store');
        Route::get('/{material}/edit', 'edit')->name('edit');
        Route::put('/{material}', 'update')->name('update');
        Route::delete('/{material}', 'destroy')->name('destroy');
    });
    // --- Routes for Managing Online Meetings within a Course ---
    Route::prefix('/courses/{course}/meetings') // URL Prefix: /teacher/courses/{course_id}/meetings/...
    ->name('courses.meetings.')           // Route Name Prefix: teacher.courses.meetings...
    ->controller(MeetingController::class) // Assign Controller
    ->group(function () {
        Route::get('/create', 'create')->name('create');    // teacher.courses.meetings.create
        Route::post('/', 'store')->name('store');          // teacher.courses.meetings.store
        Route::get('/{meeting}/edit', 'edit')->name('edit'); // teacher.courses.meetings.edit
        Route::put('/{meeting}', 'update')->name('update');  // teacher.courses.meetings.update
        Route::delete('/{meeting}', 'destroy')->name('destroy');
    });

    Route::prefix('/courses/{course}/enrollments') // Grouping under enrollments makes sense
        ->name('courses.enrollments.') // New name prefix
        ->group(function () {
                // {user} here represents the student's User ID
                Route::get('/{user}/grade', [TeacherCourseController::class, 'gradeStudentForm'])
                    ->name('grade.form'); // Full name: teacher.courses.enrollments.grade.form

                Route::post('/{user}/grade', [TeacherCourseController::class, 'storeStudentGrade'])
                    ->name('grade.store'); // Full name: teacher.courses.enrollments.grade.store
    });

    Route::get('/quizzes/{quiz}/questions', [TeacherQuestionController::class, 'index'])->name('quizzes.questions.index');
    Route::get('/quizzes/{quiz}/questions/create', [TeacherQuestionController::class, 'create'])->name('quizzes.questions.create');
    // Route untuk memproses penyimpanan pertanyaan baru
    Route::post('/quizzes/{quiz}/questions', [TeacherQuestionController::class, 'store'])->name('quizzes.questions.store');
    Route::get('/quizzes/{quiz}/questions/{question}/edit', [TeacherQuestionController::class, 'edit'])->name('quizzes.questions.edit');
    Route::put('/quizzes/{quiz}/questions/{question}', [TeacherQuestionController::class, 'update'])->name('quizzes.questions.update');
    Route::post('/questions/{question}/options', [TeacherOptionController::class, 'store'])->name('questions.options.store');
    Route::delete('/options/{option}', [TeacherOptionController::class, 'destroy'])->name('options.destroy');

    Route::resource('courses.sections', \App\Http\Controllers\Teacher\CourseSectionController::class)
    ->shallow()
    ->only(['store', 'destroy']);

    Route::resource('courses/{course}/assignments', \App\Http\Controllers\Teacher\AssignmentController::class);
    Route::get('/assignments/{assignment}/submissions', [\App\Http\Controllers\Teacher\AssignmentController::class, 'viewSubmissions'])->name('assignments.submissions.index');
    Route::post('/submissions/{submission}/grade', [\App\Http\Controllers\Teacher\AssignmentController::class, 'gradeSubmission'])->name('assignments.submissions.grade');

});


// --- Student Routes ---
Route::middleware(['auth', 'verified', 'role:Student'])->prefix('student')->name('student.')->group(function () {
    Route::get('/dashboard', StudentDashboardController::class)->name('dashboard');
    // Route for viewing courses the student is enrolled in
    Route::get('courses', [StudentCourseController::class, 'index'])->name('courses.index');
    Route::get('courses/{course}', [StudentCourseController::class, 'show'])->name('courses.show');
    Route::get('browse-courses', [StudentCourseController::class, 'browseCourses'])->name('courses.browse');
    Route::post('enrollments/{course}', [StudentCourseController::class, 'enroll']) // Using 'enroll' method in StudentCourseController
         ->name('enrollments.store'); 
    Route::get('/learning-paths', [StudentLearningPathController::class, 'index'])->name('learning-paths.index');
    Route::get('/learning-paths/{learningPath}', [StudentLearningPathController::class, 'show'])->name('learning-paths.show');
    Route::post('/learning-paths/{learningPath}/enroll', [StudentLearningPathController::class, 'enroll'])->name('learning-paths.enroll');
    Route::post('/quizzes/{quiz}/start-attempt', [QuizAttemptController::class, 'start'])->name('quizzes.start_attempt');
    Route::get('/quiz-attempts/{quizAttempt}', [QuizAttemptController::class, 'show'])->name('quiz_attempts.show');
    Route::post('/quiz-attempts/{quizAttempt}/submit', [QuizAttemptController::class, 'submit'])->name('quiz_attempts.submit');
    Route::get('/quiz-attempts/{quizAttempt}/results', [QuizAttemptController::class, 'results'])->name('quiz_attempts.results');
    Route::get('/my-quiz-attempts', [QuizAttemptController::class, 'history'])->name('quiz_attempts.history');
    Route::get('/assignments/{assignment}/submit', [\App\Http\Controllers\Student\AssignmentSubmissionController::class, 'create'])->name('assignments.submission.create');
    Route::post('/assignments/{assignment}/submit', [\App\Http\Controllers\Student\AssignmentSubmissionController::class, 'store'])->name('assignments.submission.store');
});

Route::post('/trix/upload', [TrixController::class, 'store'])->name('trix.store');



// --- Authentication Routes (Provided by Laravel Breeze) ---
// This line includes routes for login, registration, password reset, email verification, etc.
// It MUST be outside the authenticated groups above.
require __DIR__.'/auth.php';
